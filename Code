const int LED_PIN = 13; // choose a pin for the LED
const int DOT_LENGTH = 250; // duration of a dot in milliseconds
const int DASH_LENGTH = 3 * DOT_LENGTH; // duration of a dash in milliseconds
const int CHAR_GAP = 3 * DOT_LENGTH; // duration of gap between characters in milliseconds
const int WORD_GAP = 7 * DOT_LENGTH; // duration of gap between words in milliseconds

void setup() {
  pinMode(LED_PIN, OUTPUT); // set the LED pin as output
  Serial.begin(9600); // initialize serial communication
}

void loop() {
  if (Serial.available() > 0) { // if there's data available on serial port
    String message = Serial.readStringUntil('\n'); // read the message until a newline character is received
    message.toUpperCase(); // convert message to upper case
    for (int i = 0; i < message.length(); i++) {
      char c = message.charAt(i);
      switch (c) {
        case 'A':
          dot(); dash();
          break;
        case 'B':
          dash(); dot(); dot(); dot();
          break;
        case 'C':
          dash(); dot(); dash(); dot();
          break;
        case 'D':
          dash(); dot(); dot();
          break;
        case 'E':
          dot();
          break;
        case 'F':
          dot(); dot(); dash(); dot();
          break;
        case 'G':
          dash(); dash(); dot();
          break;
        case 'H':
          dot(); dot(); dot(); dot();
          break;
        case 'I':
          dot(); dot();
          break;
        case 'J':
          dot(); dash(); dash(); dash();
          break;
        case 'K':
          dash(); dot(); dash();
          break;
        case 'L':
          dot(); dash(); dot(); dot();
          break;
        case 'M':
          dash(); dash();
          break;
        case 'N':
          dash(); dot();
          break;
        case 'O':
          dash(); dash(); dash();
          break;
        case 'P':
          dot(); dash(); dash(); dot();
          break;
        case 'Q':
          dash(); dash(); dot(); dash();
          break;
        case 'R':
          dot(); dash(); dot();
          break;
        case 'S':
          dot(); dot(); dot();
          break;
        case 'T':
          dash();
          break;
        case 'U':
          dot(); dot(); dash();
          break;
        case 'V':
          dot(); dot(); dot(); dash();
          break;
        case 'W':
          dot(); dash(); dash();
          break;
        case 'X':
          dash(); dot(); dot(); dash();
          break;
        case 'Y':
          dash(); dot(); dash(); dash();
          break;
        case 'Z':
          dash(); dash(); dot(); dot();
          break;
        case ' ':
          delay(WORD_GAP); // gap between words
          break;
        default:
          break;
      }
      delay(CHAR_GAP - 3 * DOT_LENGTH); // gap between characters
    }
  }
}

void dot() {
  digitalWrite(LED_PIN, HIGH); // turn on the LED
  delay(DOT_LENGTH);
  digitalWrite(LED_PIN, LOW); // turn off the LED
  delay(DOT_LENGTH);
}

void dash() {
  digitalWrite(LED_PIN, HIGH); // turn on the LED
  delay(DASH_LENGTH);
  digitalWrite(LED_PIN, LOW); // turn
